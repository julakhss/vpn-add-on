#!/bin/bash
# // By Julak Bantur // #
# // Lates Update : 20225 // #

# A simple script for managing L2TP connections and users on Ubuntu 24

# --- Color Definitions ---
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m' # No Color

# File to store credentials
CREDENTIALS_FILE="/etc/l2tp_credentials.conf"

# Function to check for root privileges
check_root() {
    if [ "$EUID" -ne 0 ]; then
        echo -e "${RED}‚ö†Ô∏è This script must be run with sudo. Please run: sudo ./l2tp_manager.sh${NC}"
        exit 1
    fi
}

# --- Installation & Credential Storage ---
install_l2tp() {
    check_root
    echo -e "${MAGENTA}üõ†Ô∏è Starting L2TP installation and saving credentials...${NC}"

    if ! command -v curl &> /dev/null; then
        echo -e "${CYAN}üì¶ Installing curl to detect public IP...${NC}"
        apt-get update > /dev/null 2>&1
        apt-get install -y curl > /dev/null 2>&1
    fi

    echo -e "${YELLOW}üîé Detecting Server IP automatically...${NC}"
    SERVER_IP=$(curl -s ifconfig.me)

    if [[ -z "$SERVER_IP" ]]; then
        echo -e "${RED}‚ö†Ô∏è Failed to automatically detect IP.${NC}"
        read -p "Enter L2TP Server IP manually: " SERVER_IP
    else
        echo -e "${GREEN}‚úÖ Server IP successfully detected: $SERVER_IP${NC}"
    fi

    read -p "Enter primary Username: " USERNAME
    read -sp "Enter primary Password: " PASSWORD
    echo

    echo -e "${CYAN}üì¶ Updating packages and installing xl2tpd & ppp...${NC}"
    apt update > /dev/null 2>&1
    apt install -y xl2tpd ppp > /dev/null 2>&1

    echo -e "${CYAN}‚öôÔ∏è Creating configuration file at /etc/xl2tpd/xl2tpd.conf...${NC}"
    cat > /etc/xl2tpd/xl2tpd.conf <<EOF
[lac l2tp-client]
lns = $SERVER_IP
ppp debug = yes
pppoptfile = /etc/ppp/options.l2tpd.client
name = $USERNAME
EOF

    echo -e "${CYAN}‚öôÔ∏è Creating configuration file at /etc/ppp/options.l2tpd.client...${NC}"
    cat > /etc/ppp/options.l2tpd.client <<EOF
ipcp-accept-local
ipcp-accept-remote
ms-dns 8.8.8.8
ms-dns 8.8.4.4
noauth
crtscts
lock
nobsdcomp
nodeflate
EOF

    echo -e "${CYAN}üîê Adding account details to /etc/ppp/chap-secrets...${NC}"
    sed -i "/^$USERNAME /d" /etc/ppp/chap-secrets
    echo "$USERNAME * $PASSWORD *" >> /etc/ppp/chap-secrets

    echo -e "${CYAN}üíæ Saving credentials to $CREDENTIALS_FILE...${NC}"
    echo "SERVER_IP=\"$SERVER_IP\"" > "$CREDENTIALS_FILE"
    echo "USERNAME=\"$USERNAME\"" >> "$CREDENTIALS_FILE"
    echo "PASSWORD=\"$PASSWORD\"" >> "$CREDENTIALS_FILE"
    chmod 600 "$CREDENTIALS_FILE"

    echo -e "${CYAN}üöÄ Enabling and starting xl2tpd service...${NC}"
    systemctl enable xl2tpd
    systemctl start xl2tpd

    echo -e "${GREEN}‚úÖ Installation complete! Credentials have been saved.${NC}"
    manage_users_menu
}

# --- User Management Functions ---
add_user() {
    check_root
    echo -e "\n${MAGENTA}--- Add New User ---${NC}"
    read -p "Enter new Username: " NEW_USER
    read -sp "Enter Password: " NEW_PASS
    echo
    echo "Adding user $NEW_USER..."
    echo "$NEW_USER * $NEW_PASS *" >> /etc/ppp/chap-secrets
    echo -e "${GREEN}‚úÖ User $NEW_USER successfully added.${NC}"
    manage_users_menu
}

delete_user() {
    check_root
    echo -e "\n${MAGENTA}--- Delete User ---${NC}"
    read -p "Enter Username to delete: " DEL_USER
    if grep -q "^$DEL_USER " /etc/ppp/chap-secrets; then
        sed -i "/^$DEL_USER /d" /etc/ppp/chap-secrets
        echo -e "${GREEN}‚úÖ User $DEL_USER successfully deleted.${NC}"
    else
        echo -e "${RED}‚ö†Ô∏è User $DEL_USER not found.${NC}"
    fi
    manage_users_menu
}

list_users() {
    echo -e "\n${MAGENTA}--- L2TP User List ---${NC}"
    echo "Username            Password"
    echo "----------------------------"
    grep -v "^#" /etc/ppp/chap-secrets | awk '{printf "%-20s%s\n", $1, $3}'
    echo "----------------------------"
    manage_users_menu
}

# --- Connection Functions ---
connect_l2tp() {
    check_root
    if [ ! -f "$CREDENTIALS_FILE" ]; then
        echo -e "${RED}‚ö†Ô∏è Credentials file not found. Please run Option 1 first.${NC}"
        return
    fi
    echo -e "${GREEN}üü¢ Attempting to connect...${NC}"
    xl2tpd-control connect-lac l2tp-client
    echo -e "${GREEN}Done. Wait a few seconds and check the connection status.${NC}"
}

disconnect_l2tp() {
    check_root
    echo -e "${RED}üî¥ Disconnecting...${NC}"
    xl2tpd-control disconnect-lac l2tp-client
    echo -e "${RED}Connection disconnected.${NC}"
}

check_status() {
    echo -e "\n${CYAN}--- L2TP & Connection Status ---${NC}"
    
    echo -n "L2TP Service Status (xl2tpd): "
    if systemctl is-active --quiet xl2tpd; then
        echo -e "${GREEN}running ‚úÖ${NC}"
    else
        echo -e "${RED}offline ‚ùå${NC}"
        echo -e "${RED}Solution: The service may not be installed or is having issues. Try running 'Install L2TP' from the main menu.${NC}"
    fi

    echo -n "VPN Connection Status: "
    if ifconfig ppp0 &> /dev/null; then
        echo -e "${GREEN}connected ‚úÖ${NC}"
        ip addr show ppp0 | grep 'inet ' | awk '{print "Local IP: " $2}'
        echo "Checking internet connectivity..."
        ping -c 3 google.com &> /dev/null
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}üåê Internet is connected through the VPN.${NC}"
        else
            echo -e "${RED}‚ö†Ô∏è Internet is not connected. Check your configuration or server.${NC}"
        fi
    else
        echo -e "${RED}not connected ‚ùå${NC}"
    fi
}

# --- Main Menu ---
main_menu() {
    while true; do
        echo -e "\n${CYAN}--- L2TP Manager Main Menu ---${NC}"
        echo -e "${CYAN}1) üõ†Ô∏è  Install L2TP (Run once)${NC}"
        echo -e "${CYAN}2) üü¢ Connect to L2TP (Client)${NC}"
        echo -e "${CYAN}3) üî¥ Disconnect (Client)${NC}"
        echo -e "${CYAN}4) üìä Check L2TP & Connection Status${NC}"
        echo -e "${CYAN}5) üë• Manage Users (Server)${NC}"
        echo -e "${CYAN}6) ‚ùå Exit${NC}"
        echo "------------------------------------"
        read -p "Select an option [1-6]: " choice
        case "$choice" in
            1) install_l2tp ;;
            2) connect_l2tp ;;
            3) disconnect_l2tp ;;
            4) check_status ;;
            5) manage_users_menu ;;
            6) echo "Thank you! Goodbye."; exit 0 ;;
            *) echo -e "${RED}Invalid option. Please try again.${NC}" ;;
        esac
    done
}

manage_users_menu() {
    while true; do
        echo -e "\n${MAGENTA}--- User Management Menu ---${NC}"
        echo -e "${MAGENTA}1) ‚ûï Add User${NC}"
        echo -e "${MAGENTA}2) ‚ûñ Delete User${NC}"
        echo -e "${MAGENTA}3) üìã List Users${NC}"
        echo -e "${MAGENTA}4) ‚Ü©Ô∏è Return to Main Menu${NC}"
        echo "------------------------------------"
        read -p "Select an option [1-4]: " choice
        case "$choice" in
            1) add_user ;;
            2) delete_user ;;
            3) list_users ;;
            4) main_menu ;;
            *) echo -e "${RED}Invalid option. Please try again.${NC}" ;;
        esac
    done
}

# Start the main menu
main_menu
